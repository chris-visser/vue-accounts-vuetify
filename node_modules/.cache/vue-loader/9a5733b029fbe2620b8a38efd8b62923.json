{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cloudspider/Server/open-source/meteor-vue-auth/packages/vuetify-auth-components/src/components/BaseForm.vue?vue&type=template&id=3ee59636&","dependencies":[{"path":"/home/cloudspider/Server/open-source/meteor-vue-auth/packages/vuetify-auth-components/src/components/BaseForm.vue","mtime":1546619723897},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-form\",\n    {\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.submit($event)\n        }\n      },\n      model: {\n        value: _vm.isValid,\n        callback: function($$v) {\n          _vm.isValid = $$v\n        },\n        expression: \"isValid\"\n      }\n    },\n    [\n      _vm._l(_vm.formFields, function(field) {\n        return _c(\"v-text-field\", {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: field.type !== \"hidden\",\n              expression: \"field.type !== 'hidden'\"\n            },\n            {\n              name: \"validate\",\n              rawName: \"v-validate\",\n              value: field.validations,\n              expression: \"field.validations\"\n            }\n          ],\n          key: field.name,\n          attrs: {\n            autofocus: field.autofocus,\n            type: field.type,\n            color: field.color,\n            label: field.label,\n            placeholder: \" \",\n            \"data-vv-name\": field.name,\n            \"data-vv-validate-on\": \"blur\",\n            \"error-messages\": _vm.errors.collect(field.name)\n          },\n          model: {\n            value: field.value,\n            callback: function($$v) {\n              _vm.$set(field, \"value\", $$v)\n            },\n            expression: \"field.value\"\n          }\n        })\n      }),\n      _vm._t(\"default\"),\n      _c(\n        \"v-alert\",\n        {\n          attrs: {\n            value: !!_vm.error,\n            color: \"error\",\n            icon: \"warning\",\n            outline: \"\"\n          }\n        },\n        [_vm._v(\"\\n    \" + _vm._s(_vm.error) + \"\\n  \")]\n      ),\n      _c(\n        \"v-btn\",\n        {\n          staticClass: \"mt-3\",\n          attrs: {\n            type: \"submit\",\n            color: _vm.submitBtnProps.color,\n            dark: _vm.submitBtnProps.dark,\n            isLoading: _vm.submitBtnProps.isLoading,\n            block: \"\"\n          }\n        },\n        [_vm._v(\"\\n    \" + _vm._s(_vm.submitBtnProps.title) + \"\\n  \")]\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}