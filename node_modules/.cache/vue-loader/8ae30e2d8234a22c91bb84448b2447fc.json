{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cloudspider/Server/open-source/meteor-vue-auth/packages/vuetify-auth-components/src/components/BaseForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/cloudspider/Server/open-source/meteor-vue-auth/packages/vuetify-auth-components/src/components/BaseForm.vue","mtime":1546619723897},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus,\ntextarea:-webkit-autofill,\ntextarea:-webkit-autofill:hover,\ntextarea:-webkit-autofill:focus,\nselect:-webkit-autofill,\nselect:-webkit-autofill:hover,\nselect:-webkit-autofill:focus {\n  -webkit-box-shadow: 0 0 0 1000px #ffffff inset;\n  transition: background-color 5000s ease-in-out 0s;\n}\n",{"version":3,"sources":["BaseForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-form v-model=\"isValid\" @submit.prevent=\"submit\">\n\n    <v-text-field\n        v-for=\"field in formFields\"\n        :key=\"field.name\"\n        :autofocus=\"field.autofocus\"\n        v-model=\"field.value\"\n        v-show=\"field.type !== 'hidden'\"\n        v-validate=\"field.validations\"\n        :type=\"field.type\"\n        :color=\"field.color\"\n        :label=\"field.label\"\n        placeholder=\" \"\n        :data-vv-name=\"field.name\"\n        data-vv-validate-on=\"blur\"\n        :error-messages=\"errors.collect(field.name)\"\n    />\n\n    <slot />\n\n    <v-alert :value=\"!!error\" color=\"error\" icon=\"warning\" outline>\n      {{ error }}\n    </v-alert>\n\n    <v-btn\n        type=\"submit\"\n        :color=\"submitBtnProps.color\"\n        :dark=\"submitBtnProps.dark\"\n        :isLoading=\"submitBtnProps.isLoading\"\n        block\n        class=\"mt-3\"\n    >\n      {{ submitBtnProps.title }}\n    </v-btn>\n\n  </v-form>\n</template>\n\n<script>\n\n  export default {\n    props: {\n      error: { type: String },\n      submitBtnProps: { type: Object },\n      formFields: { type: Array },\n    },\n\n    data() {\n      return {\n        isValid: false,\n      }\n    },\n\n    methods: {\n      async submit() {\n        await this.$validator.validateAll(); // vee-validate validation\n\n        if (!this.isValid) {\n          return;\n        }\n\n        const payload = this.getFormFieldValues();\n\n        this.$emit('submit', payload);\n      },\n      /**\n       * Return an object with key/value pairs (name: value)\n       * @returns {*}\n       */\n      getFormFieldValues() {\n        return this.formFields.reduce((obj, field) => {\n          return { ...obj, [field.name]: field.value };\n        }, {});\n      },\n    },\n  };\n</script>\n\n<style>\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover,\n  textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0 1000px #ffffff inset;\n    transition: background-color 5000s ease-in-out 0s;\n  }\n</style>\n"]}]}