{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cloudspider/Server/open-source/meteor-vue-auth/packages/vuetify-auth-components/src/components/ResetPasswordCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cloudspider/Server/open-source/meteor-vue-auth/packages/vuetify-auth-components/src/components/ResetPasswordCard.vue","mtime":1546416683445},{"path":"/home/cloudspider/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ResetPasswordForm from './ResetPasswordForm';\n\nexport default {\n  components: {\n    ResetPasswordForm,\n  },\n\n  props: {\n    title: { type: String, default: 'Reset your password here' },\n    description: { type: String, default: 'Please enter your new password below and you will be good to go! If this was a mistake, simply close this page or return to the login by clicking the link below the form.' },\n    loginLink: { type: String, default: '/' },\n    loginLinkTitle: { type: String, default: 'Back to the login!' },\n  },\n\n  data() {\n    return {\n      isValid: false,\n      error: '',\n      status: 'idle',\n    };\n  },\n\n  methods: {\n    async resetPassword({ password }) {\n\n      const { token } = this.$route.query;\n\n      this.status = 'submitting';\n\n      await this.$store.dispatch('resetPassword', { token, password })\n        .then(() => {\n          // this.$router.replace('/');\n          this.status = 'success';\n        })\n        .catch((error) => {\n          this.status = 'error';\n          this.error = error;\n        });\n    },\n  },\n};\n",{"version":3,"sources":["ResetPasswordCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPasswordCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card width=\"100%\" max-width=\"450\">\n    <v-card-title primary-title>\n      <div>\n        <h2 class=\"headline mb-0\">\n          {{title}}\n        </h2>\n        <p>\n          {{description}}\n        </p>\n      </div>\n    </v-card-title>\n\n    <v-card-text>\n      <reset-password-form />\n\n      <p class=\"text-lg-right mt-4\">\n        <v-btn flat small :to=\"loginLink\">\n          {{loginLinkTitle}}\n        </v-btn>\n      </p>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\n  import ResetPasswordForm from './ResetPasswordForm';\n\n  export default {\n    components: {\n      ResetPasswordForm,\n    },\n\n    props: {\n      title: { type: String, default: 'Reset your password here' },\n      description: { type: String, default: 'Please enter your new password below and you will be good to go! If this was a mistake, simply close this page or return to the login by clicking the link below the form.' },\n      loginLink: { type: String, default: '/' },\n      loginLinkTitle: { type: String, default: 'Back to the login!' },\n    },\n\n    data() {\n      return {\n        isValid: false,\n        error: '',\n        status: 'idle',\n      };\n    },\n\n    methods: {\n      async resetPassword({ password }) {\n\n        const { token } = this.$route.query;\n\n        this.status = 'submitting';\n\n        await this.$store.dispatch('resetPassword', { token, password })\n          .then(() => {\n            // this.$router.replace('/');\n            this.status = 'success';\n          })\n          .catch((error) => {\n            this.status = 'error';\n            this.error = error;\n          });\n      },\n    },\n  };\n</script>\n\n<style>\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover,\n  textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0 1000px #ffffff inset;\n    transition: background-color 5000s ease-in-out 0s;\n  }\n</style>\n"]}]}